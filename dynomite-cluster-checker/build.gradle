apply plugin: 'war'
apply plugin: 'application'
apply plugin: 'eclipse'


version = '1.0'
sourceCompatibility = 1.8

mainClassName = "com.github.diegopacheco.dynomite.cluster.checker.main.DynomiteClusterCheckerMain"

applicationDefaultJvmArgs = [
								 "-Djava.net.preferIPv4Stack=true",
								 "-Djava.net.preferIPv6Addresses=false",
								 "-server",
								 "-Xmx1024m",
								 "-Xms4096m",
							 ]

run {
	if (System.getProperty('DEBUG', 'false') == 'true') {
		jvmArgs '-Xdebug',
			'-agentlib:jdwp=transport=dt_socket,address=9009,server=y,suspend=y'
	}
}


repositories {
	jcenter()
	mavenLocal()
}

buildscript {
	repositories {
			jcenter()
			mavenLocal()
	}
	dependencies {
		classpath 'org.akhikhl.gretty:gretty:+'
	}
}
apply plugin: 'org.akhikhl.gretty'

gretty {
	jvmArgs = ['-Xms1024m',
			   '-Xmx4096m',
			   '-XX:-HeapDumpOnOutOfMemoryError',
			   '-XX:ErrorFile=./hs_err_pid%p.log']

	if (System.getenv('ENABLE_JMX') == 'true') {
		jvmArgs = jvmArgs +  ['-Dcom.sun.management.jmxremote',
							  '-Dcom.sun.management.jmxremote.port=7094',
							  '-Dcom.sun.management.jmxremote.ssl=false',
							  '-Dcom.sun.management.jmxremote.authenticate=false']
	}

	httpPort = 7766
}

eclipse {
	classpath {
		downloadSources = true
	}
}

dependencies {

	testCompile('junit:junit:4.11')

	compile([
		   'javax.servlet:servlet-api:2.5',
		   'org.apache.commons:commons-lang3:3.4',
		   'org.slf4j:slf4j-simple:1.7.21',
		   'com.google.inject:guice:4.1.0'
	])
		    
	compile('com.netflix.dyno:dyno-jedis:1.5.8-rc.4'){
	     exclude group: 'org.slf4j', module: 'slf4j-api'
	}		
	    
}

jar {
	from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
		exclude "META-INF/*.SF"
		exclude "META-INF/*.DSA"
		exclude "META-INF/*.RSA"
	}

	manifest {
		attributes 'Implementation-Title': 'Foobar',
				'Implementation-Version': version,
				'Built-By': System.getProperty('user.name'),
				'Built-Date': new Date(),
				'Built-JDK': System.getProperty('java.version'),
				'Main-Class': mainClassName
	}
}

//
// ./gradlew execute -Dexec.args="local"
// ./gradlew execute -Dexec.args="127.0.0.1:8102:rack1:localdc:1383429731"
// ./gradlew execute -Dexec.args="127.0.0.1:8102:rack1:localdc:1383429731|127.0.0.1:8102:rack1:localdc:1383429731|127.0.0.1:8102:rack1:localdc:1383429731"
//
task execute(type:JavaExec) {
	main = mainClassName
	classpath = sourceSets.main.runtimeClasspath
	systemProperties System.getProperties()
	if (System.getProperty("exec.args")!=null)
		args System.getProperty("exec.args").split()
}
